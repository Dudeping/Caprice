@page "/"

@using Microsoft.AspNetCore.Mvc.ViewFeatures;

@inject INoteService _noteService;
@inject ITextToHtmlService _toHtmlService;
@inject IJSRuntime _jsRuntime;

<div class="card-columns">
    @foreach (var note in _notes)
    {
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">@note.Title</h5>
                <p class="card-text">@((MarkupString)note.HtmlText)</p>
                @if (!string.IsNullOrWhiteSpace(note.Code))
                {
                    <pre><code>@note.Code</code></pre>
                }
                <p class="card-text">
                    <small class="text-muted">@note.CreateTime</small>
                    <a href="#" @onclick="async e => await this.DeleteNote(note.Id)" class="oi oi-trash" style="float:right"></a>
                </p>
            </div>
        </div>
    }
</div>

@code{
    private IEnumerable<Note> _notes;

    protected async override Task OnInitializedAsync()
    {
        var notes = _noteService.GetNotes().ToList();

        foreach (var note in notes)
        {
            if (string.IsNullOrWhiteSpace(note.HtmlText))
            {
                note.HtmlText = _toHtmlService.Transform(note.Content);

                await _noteService.UpdateAsync(note);
            }
        }

        _notes = notes.OrderByDescending(x => x.Id);
    }

    public async Task DeleteNote(int id)
    {
        if (await _jsRuntime.CheckPassword())
        {
            await _noteService.DeleteAsync(id);

            await this.OnInitializedAsync();
        }
    }
}